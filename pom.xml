<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.fabri1983</groupId>
	<artifactId>java2proto2grpc</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Java To Protobuf To gRPC</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<log4j2.version>2.14.1</log4j2.version>
		<javax.annotation.api.version>1.3.2</javax.annotation.api.version> <!-- protobuf Java 9+ compatibility -->
		<os.maven.version>1.7.0</os.maven.version>
		<protobuf.maven.version>0.6.1</protobuf.maven.version>
		<io.grpc.version>1.41.0</io.grpc.version>
		<google.protobuf.version>3.18.0</google.protobuf.version>
		<consul.client.version>1.4.5</consul.client.version>
		<resilience4j.version>1.7.1</resilience4j.version>
		<!-- metrics collector -->
		<dropwizard.metrics.version>4.2.3</dropwizard.metrics.version>
		
		<!-- unit testing -->
		<junit.version>4.13.2</junit.version>
		
		<dependency.check.maven.version>6.3.1</dependency.check.maven.version>
	</properties>
	
	<profiles>
		<profile>
			<id>java8</id>
			<properties>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>8</maven.compiler.target>
			</properties>
		</profile>
		<profile>
			<id>java11</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<maven.compiler.source>8</maven.compiler.source>
				<maven.compiler.target>11</maven.compiler.target>
				<maven.compiler.release>11</maven.compiler.release>
			</properties>
		</profile>
		<!-- OWASP security checker for project dependencies -->
		<profile>
			<id>securitycheck</id>
			<dependencies>
				<!-- OWASP dependency checker -->
				<dependency>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>${dependency.check.maven.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>${dependency.check.maven.version}</version>
						<configuration>
							<suppressionFiles>
								<!--suppressionFile>suppressed.xml</suppressionFile-->
							</suppressionFiles>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<!-- The Log4j 2 SLF4J Binding allows applications coded to the SLF4J API to use Log4j 2 as the implementation. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- protobuf Java 9+ compatibility -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation.api.version}</version>
		</dependency>
		<!-- Protocol Buffers compiler to be used by plugin protobuf-maven-plugin -->
		<dependency>
		    <groupId>com.google.protobuf</groupId>
		    <artifactId>protoc</artifactId>
		    <version>${google.protobuf.version}</version>
		    <type>pom</type>
		</dependency>
		<!-- Core Protocol Buffers library. Protocol Buffers are a way of encoding structured data in an efficient yet extensible format. -->
		<!-- verify this: protobuf-java dependency to avoid code generation error -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>${google.protobuf.version}</version>
		</dependency>
		<!-- gRPC compiler to be used by plugin protobuf-maven-plugin -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>protoc-gen-grpc-java</artifactId>
			<version>${io.grpc.version}</version>
			<type>pom</type>
		</dependency>
		<!-- gRPC Client and Server -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-protobuf</artifactId>
			<version>${io.grpc.version}</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-stub</artifactId>
			<version>${io.grpc.version}</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty-shaded</artifactId>
			<version>${io.grpc.version}</version>
		</dependency>
		<!-- Required to resolve internal compilation references by some classes in the netty-shaded dependency -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-core</artifactId>
			<version>${io.grpc.version}</version>
		</dependency>
		<!-- Consul Service Discovery Client -->
		<dependency>
			<groupId>com.ecwid.consul</groupId>
			<artifactId>consul-api</artifactId>
			<version>${consul.client.version}</version>
		</dependency>
		<!-- Resilience4j modules -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-circuitbreaker</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-ratelimiter</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-retry</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-bulkhead</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-metrics</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>
		<!-- Dropwizard's Metrics core -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>${dropwizard.metrics.version}</version>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>${os.maven.version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>detect</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Execute protobuf-maven-plugin before maven-compiler-plugin -->
			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>${protobuf.maven.version}</version>
				<configuration>
					<protocArtifact>com.google.protobuf:protoc:${google.protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
					<pluginId>grpc-java</pluginId>
					<pluginArtifact>io.grpc:protoc-gen-grpc-java:${io.grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
					<!-- Avoids invoking protoc compilation on every execution -->
					<checkStaleness>true</checkStaleness>
					<!-- Additional setting to checkStaleness if current file system is NFS -->
					<staleMillis>10000</staleMillis>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<id>compile-protobuf</id>
						<goals>
							<goal>compile</goal>
							<goal>compile-custom</goal>
							<goal>test-compile</goal>
							<goal>test-compile-custom</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Execute maven-compiler-plugin after protobuf classes were generated -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<compilerArgs>
						<!-- force inclusion of parameter real name on signature definition, so .proto file generation is more readable -->
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<timestampFormat>EpochMillis</timestampFormat>
					<!-- token provided by -D argument on .travis.yml from environment variable set up on Travis CI account -->
					<repoToken></repoToken>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
</project>